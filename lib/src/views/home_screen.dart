import 'dart:convert';import 'package:flutter/material.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:http/http.dart';import 'package:nearme/src/views/deatil_page.dart';import 'package:shared_preferences/shared_preferences.dart';import '../model/city_banner.dart';import '../model/custome_container.dart';import 'package:http/http.dart' as http;class HomeScreen extends StatefulWidget {  const HomeScreen({super.key});  @override  State<HomeScreen> createState() => _HomeScreenState();}class _HomeScreenState extends State<HomeScreen> {  final GlobalKey<ScaffoldState> drawerName = GlobalKey();  List<String> cityName = ['vadodara', 'ahemdabad', 'salanpur'];  List<CustomContainer> hotels = [];  List<CustomContainer> places = [];  @override  void initState() {    print('init');    initialize();    super.initState();  }  void initialize() async {    hotels = await hotelsData();    places = await placesData();    setState(() {});    print('initialize ${hotels.length}');    print('initialize ${places.length}');  }  Future<List<CustomContainer>> hotelsData() async {    String url = 'https://neartravel.teleferti.com/api/hotels';    Response response = await http.get(Uri.parse(url));    var data = jsonDecode(response.body);    int length = data['hotels'].length;    List<CustomContainer> hotels = [];    for (int i = 0; i < length; i++) {      String city = data['hotels'][i]['city'];      String imageUrl = data['hotels'][i]['images'][0];      String imageUrl1 = data['hotels'][i]['images'][1];      String title = data['hotels'][i]['name'];      double rating = (data['hotels'][i]['rating']).toDouble();      String info = data['hotels'][i]['details'];      String status = 'Open';      String address = data['hotels'][i]['address'];      hotels.add(CustomContainer(        city: city,        imageUrl: imageUrl,        title: title,        rating: rating,        info: info,        status: status,        address: address,        imageUrl1: imageUrl1,      ));    }    // print('function ${hotels.length}');    return hotels;  }  Future<List<CustomContainer>> placesData() async {    String url = 'https://neartravel.teleferti.com/api/places';    Response response = await http.get(Uri.parse(url));    var data = jsonDecode(response.body);    int length = data['places'].length;    List<CustomContainer> places = [];    for (int i = 0; i < length; i++) {      String city = data['places'][i]['city'];      String imageUrl = data['places'][i]['images'][0];      String imageUrl1 = data['places'][i]['images'][1];      String title = data['places'][i]['name'];      double rating = (data['places'][i]['rating']).toDouble();      String info = data['places'][i]['details'];      String status = 'Open';      String address = data['places'][i]['address'];      places.add(CustomContainer(        city: city,        imageUrl: imageUrl,        title: title,        rating: rating,        info: info,        status: status,        address: address,        imageUrl1: imageUrl1,      ));    }    // print('function ${places.length}');    return places;  }  @override  Widget build(BuildContext context) {    print(places.length);    print(hotels.length);    return WillPopScope(        onWillPop: () {          return Future(() => true);        },        child: Scaffold(          extendBody: true,          key: drawerName,          drawer: Drawer(            // width: MediaQuery.of(context).size.width * 0.7,            child: Column(              crossAxisAlignment: CrossAxisAlignment.center,              children: [                const DrawerHeader(                  padding: EdgeInsets.only(top: 40),                  child: Column(                    children: [                      Row(                        children: [                          Padding(                            padding: EdgeInsets.symmetric(horizontal: 5.7),                            child: CircleAvatar(                              radius: 35,                              foregroundImage:                                  AssetImage("Assets/profileImage/jeel.jpeg"),                              backgroundImage: AssetImage(                                  "Assets/profileImage/profileImage.webp"),                              backgroundColor: Colors.grey,                            ),                          ),                          Column(                            crossAxisAlignment: CrossAxisAlignment.start,                            children: [                              Text(                                "Jeel Khant",                                style: TextStyle(                                  fontSize: 20,                                  color: Colors.black,                                  fontFamily: 'Roboto',                                  fontWeight: FontWeight.w600,                                ),                              ),                              Text(                                "jeelkhant34@gmail.com",                                style: TextStyle(                                  fontSize: 14,                                  color: Colors.black,                                  fontFamily: 'Roboto',                                  fontWeight: FontWeight.w500,                                ),                              ),                            ],                          ),                        ],                      ),                    ],                  ),                ),                Padding(                  padding: const EdgeInsets.only(top: 20, left: 25, right: 10),                  child: Column(                    children: [                      InkWell(                        onTap: () {                          Navigator.pushNamed(context, 'trip');                        },                        splashColor: const Color(0x00e8f2fe),                        child: ListTile(                          titleTextStyle: const TextStyle(                            color: Color(0xFF5D7285),                            fontSize: 20,                            fontFamily: 'Roboto',                            fontWeight: FontWeight.w600,                          ),                          title: const Text("List of Trip places"),                          splashColor: const Color(0xFFE9F5FE),                          leading: Image.asset("Assets/Icon/travel.png"),                          shape: RoundedRectangleBorder(                            borderRadius: BorderRadius.circular(5),                          ),                        ),                      ),                      InkWell(                          onTap: () {                            Navigator.pushNamed(context, 'customer');                          },                          splashColor: const Color(0x00e8f2fe),                          child: ListTile(                            titleTextStyle: const TextStyle(                              color: Color(0xFF5D7285),                              fontSize: 20,                              fontFamily: 'Roboto',                              fontWeight: FontWeight.w600,                            ),                            title: const Text("Customer Support"),                            splashColor: const Color(0xFFE9F5FE),                            leading:                                Image.asset("Assets/Icon/customer-support.png"),                            shape: RoundedRectangleBorder(                              borderRadius: BorderRadius.circular(5),                            ),                          )),                      InkWell(                        onTap: () {                          Navigator.pushNamed(context, "privacy");                        },                        splashColor: const Color(0x00e8f2fe),                        child: ListTile(                          titleTextStyle: const TextStyle(                            color: Color(0xFF5D7285),                            fontSize: 20,                            fontFamily: 'Roboto',                            fontWeight: FontWeight.w600,                          ),                          title: const Text("Privacy and Policy"),                          splashColor: const Color(0xFFE9F5FE),                          leading: Image.asset("Assets/Icon/lock.png"),                          shape: RoundedRectangleBorder(                            borderRadius: BorderRadius.circular(5),                          ),                        ),                      ),                      InkWell(                        onTap: () {                          Navigator.pushNamed(context, 'terms');                        },                        splashColor: const Color(0x00e8f2fe),                        child: ListTile(                          titleTextStyle: const TextStyle(                            color: Color(0xFF5D7285),                            fontSize: 18,                            fontFamily: 'Roboto',                            fontWeight: FontWeight.w600,                          ),                          title: const Text("Terms and Conditions"),                          splashColor: const Color(0xFFE9F5FE),                          leading:                              Image.asset("Assets/Icon/newspaper-outline.png"),                          shape: RoundedRectangleBorder(                            borderRadius: BorderRadius.circular(5),                          ),                        ),                      ),                      InkWell(                        onTap: () {                          Navigator.pushNamed(context, 'setting');                        },                        splashColor: const Color(0x00e8f2fe),                        child: ListTile(                          titleTextStyle: const TextStyle(                            color: Color(0xFF5D7285),                            fontSize: 20,                            fontFamily: 'Roboto',                            fontWeight: FontWeight.w600,                          ),                          title: const Text("Setting"),                          splashColor: const Color(0xFFE9F5FE),                          leading: Image.asset("Assets/Icon/Setting .png"),                          shape: RoundedRectangleBorder(                            borderRadius: BorderRadius.circular(5),                          ),                        ),                      ),                    ],                  ),                ),                const Expanded(                  child: SizedBox(),                ),                Padding(                    padding: const EdgeInsets.symmetric(                      horizontal: 20,                    ),                    child: ElevatedButton(                      style: ButtonStyle(                        elevation: const MaterialStatePropertyAll(20),                        shadowColor: const MaterialStatePropertyAll(                          Color.fromRGBO(54, 122, 255, 1),                        ),                        shape: MaterialStateProperty.all(                          const RoundedRectangleBorder(                            borderRadius: BorderRadius.all(                              Radius.circular(10),                            ),                          ),                        ),                        backgroundColor: MaterialStateProperty.all(                          const Color.fromRGBO(29, 127, 214, 1),                        ),                      ),                      onPressed: () async {                        SharedPreferences prefs =                            await SharedPreferences.getInstance();                        prefs.remove("token");                        Navigator.pushReplacementNamed(context, 'login');                      },                      child: Container(                        alignment: Alignment.center,                        child: const Row(                          mainAxisAlignment: MainAxisAlignment.center,                          children: [                            Icon(                              Icons.logout_outlined,                              color: Colors.white,                              size: 30,                            ),                            SizedBox(                              width: 10,                            ),                            Text(                              "Logout",                              style: TextStyle(                                color: Colors.white,                                fontSize: 18,                                fontWeight: FontWeight.w800,                              ),                            ),                          ],                        ),                      ),                    )),                const SizedBox(                  height: 20,                ),              ],            ),          ),          appBar: AppBar(            actions: <Widget>[              Padding(                padding: const EdgeInsets.symmetric(horizontal: 10),                child: GestureDetector(                  onTap: () {                    drawerName.currentState?.openDrawer();                  },                  child: Image.asset("Assets/Icon/menu.png"),                ),              ),              const Spacer(),              SizedBox(                height: MediaQuery.of(context).size.height * 0.18,                width: MediaQuery.of(context).size.width * 0.18,                child: const Image(                  image: AssetImage(                    'Assets/logo/Icon/nearme_logo.png',                  ),                ),              ),              const Spacer(),              Padding(                padding: const EdgeInsets.symmetric(horizontal: 10),                child: GestureDetector(                  onTap: () {},                  child: Image.asset("Assets/Icon/Search_Icon_tour.png"),                ),              ),            ],          ),          body: hotels.isEmpty || places.isEmpty              ? const Center(                  child: CircularProgressIndicator(                  color: Color.fromRGBO(54, 122, 255, 1),                ))              : SingleChildScrollView(                  scrollDirection: Axis.vertical,                  physics: const BouncingScrollPhysics(),                  child: Column(                    crossAxisAlignment: CrossAxisAlignment.start,                    children: [                      const SizedBox(                        height: 15,                      ),                      CarouselSlider(                        items: [                          CityBanner(                            image: Image.asset(                              'Assets/banner/city_banner1.png',                              fit: BoxFit.cover,                            ),                            borderRadius: 20,                          ),                          CityBanner(                            image: Image.asset(                              'Assets/banner/city_banner2.png',                              fit: BoxFit.cover,                            ),                            borderRadius: 20,                          ),                          CityBanner(                            image: Image.asset(                              'Assets/banner/city_banner3.png',                              fit: BoxFit.cover,                            ),                            borderRadius: 20,                          ),                          CityBanner(                            image: Image.asset(                              'Assets/banner/city_banner4.png',                              fit: BoxFit.cover,                            ),                            borderRadius: 20,                          ),                        ],                        options: CarouselOptions(viewportFraction: 0.92),                      ),                      const SizedBox(                        height: 25,                      ),                      const Padding(                        padding: EdgeInsets.only(top: 8.0, left: 8, right: 8),                        child: Text(                          'Famous Places',                          style: TextStyle(                            fontWeight: FontWeight.bold,                            fontSize: 20,                          ),                        ),                      ),                      SizedBox(                        height: MediaQuery.of(context).size.height * 0.35,                        child: ListView.builder(                          itemCount: places.length,                          itemBuilder: (context, index) => GestureDetector(                              onTap: () {                                Navigator.of(context).push(                                  MaterialPageRoute(                                    builder: (context) => DetailPage(                                      c: places[index],                                    ),                                  ),                                );                              },                              child: places[index]),                          scrollDirection: Axis.horizontal,                          physics: const BouncingScrollPhysics(),                          shrinkWrap: true,                        ),                      ),                      const Padding(                        padding: EdgeInsets.only(top: 8.0, left: 8, right: 8),                        child: Text(                          'Hotel',                          style: TextStyle(                            fontWeight: FontWeight.bold,                            fontSize: 28,                          ),                        ),                      ),                      SizedBox(                        height: MediaQuery.of(context).size.height * 0.35,                        child: ListView.builder(                          itemCount: hotels.length,                          itemBuilder: (context, index) => GestureDetector(                              onTap: () {                                Navigator.of(context).push(                                  MaterialPageRoute(                                    builder: (context) => DetailPage(                                      c: hotels[index],                                    ),                                  ),                                );                              },                              child: hotels[index]),                          scrollDirection: Axis.horizontal,                          physics: const BouncingScrollPhysics(),                          shrinkWrap: true,                        ),                      ),                      const SizedBox(                        height: 100,                      ),                    ],                  ),                ),        ));  }}