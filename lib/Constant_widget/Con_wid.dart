import 'package:flutter/material.dart';import 'package:flutter/services.dart';class Con_wid {  static CommanText(      {required String text,      FontWeight? fontweight,      TextDecoration? textDecoration,      Color? textDecorationcolor,      double? Size,      Color? color}) {    return Text(      text,      style: TextStyle(        decorationColor: textDecorationcolor ?? null,        decoration: textDecoration ?? TextDecoration.none,        fontWeight: fontweight ?? FontWeight.w500,        color: color ?? Colors.black,        fontSize: Size ?? 14,      ),    );  }  static Con_Textfield({    TextEditingController? controllller,    double? containerheight,    var keyboardtype,    bool? inputfilled,    Color? cursorcolor,    Color? bordercolor,    bool? is_border,    Color? inputcolor,    Color? decorationcolor,    double? decorationwidth,    Color? textfieldcolor,    double? inputborderradious,    EdgeInsetsGeometry? contentpadding,    String? hinttext,    TextStyle? hintstyle,    Color? suffixiconcolor,    double? fontsize,    Widget? suffixicon,    List<TextInputFormatter>? inputformat,    Widget? prefix,    bool? is_enable,    bool? is_obscureText,    int? maxlenght,    Key? key,    int? maxLines,    FontWeight? text_fontWeight,    void Function(dynamic)? onchange,    String? Function(String?)? Validator,  }) {    return TextFormField(      maxLength: maxlenght ?? 100000,      key: key,      validator: Validator ?? (val) {},      maxLines: maxLines ?? 1,      obscureText: is_obscureText ?? false,      enabled: is_enable ?? true,      inputFormatters: inputformat ?? [],      onChanged: onchange ?? (val) {},      keyboardType: keyboardtype ?? TextInputType.emailAddress,      controller: controllller ?? null,      cursorColor: cursorcolor ?? null,      style: TextStyle(          fontWeight: text_fontWeight ?? FontWeight.w100,          color: textfieldcolor ?? Colors.black,          fontSize: fontsize ?? 16),      textAlign: TextAlign.start,      decoration: Con_wid.Con_Inputdecoration(          prefix: prefix ?? null,          suffixiconcolor: suffixiconcolor,          suffixicon: suffixicon ?? null,          hinttext: hinttext ?? "",          hintstyle: hintstyle ?? null,          color: inputcolor ?? Colors.black,          borderradius: inputborderradious ?? 8,          contentpadding: contentpadding ??              EdgeInsets.symmetric(vertical: 15.0, horizontal: 15),          filled: inputfilled ?? true),    );  }  static Con_Inputdecoration(      {Color? color,      bool? filled,      double? borderradius,      bool? is_border,      String? hinttext,      TextStyle? hintstyle,      Color? suffixiconcolor,      Widget? suffixicon,      Widget? prefix,      EdgeInsetsGeometry? contentpadding}) {    return InputDecoration(      counterText: "",      labelText: hinttext,      labelStyle: hintstyle,      prefixIcon: prefix ?? null,      suffixIcon: suffixicon ?? null,      suffixIconColor: suffixiconcolor,      filled: filled ?? true,      fillColor: color ?? Colors.black,      focusedBorder: OutlineInputBorder(          borderRadius: BorderRadius.circular(borderradius ?? 8),          borderSide: BorderSide(            color: Color(0xff367AFF),          )),      focusedErrorBorder: OutlineInputBorder(          borderRadius: BorderRadius.circular(borderradius ?? 8),          borderSide: BorderSide(            color: Color(0xffD9D9D9),          )),      border: OutlineInputBorder(          borderRadius: BorderRadius.circular(borderradius ?? 8),          borderSide: BorderSide(color: Colors.red)),      enabledBorder: OutlineInputBorder(          borderRadius: BorderRadius.circular(borderradius ?? 8),          borderSide: BorderSide(color: Color(0xffD9D9D9))),      contentPadding: contentpadding ??          EdgeInsets.symmetric(vertical: 15.0, horizontal: 15),    );  }  static Comman_Textfield(      {Widget? suffixicon,      TextStyle? hintstyle,      bool? is_enable,      bool? is_obscureText,      List<TextInputFormatter>? inputformat,      void Function(dynamic)? onchange,      TextEditingController? controller,      var keyboardtype,      int? maxLines,      required String hintText,      int? maxlenght,      Key? key,      Color? suffixiconcolor,      String? Function(String?)? Validator,      Widget? prefix}) {    return Con_wid.Con_Textfield(      maxlenght: maxlenght ?? 100000,      key: key,      Validator: Validator ?? (val) {},      maxLines: maxLines ?? 1,      is_enable: is_enable ?? true,      is_obscureText: is_obscureText ?? false,      inputcolor: Colors.white,      is_border: false,      keyboardtype: keyboardtype ?? TextInputType.emailAddress,      inputformat: inputformat ?? [],      onchange: onchange ?? (val) {},      controllller: controller ?? null,      suffixicon: suffixicon ?? null,      cursorcolor: Color(0xff000000),      hinttext: hintText,      prefix: prefix ?? null,      suffixiconcolor: suffixiconcolor ?? null,      textfieldcolor: Colors.black,      text_fontWeight: FontWeight.w500,      hintstyle: hintstyle ??          TextStyle(            fontWeight: FontWeight.w400,            color: Color(0xff676767),            fontSize: 16,          ),    );  }  static Comman_container({required Widget child}) {    return Container(      height: 50,      width: double.infinity,      decoration: BoxDecoration(        borderRadius: BorderRadius.circular(10),        color: Color(0xff367AFF),      ),      child: child,    );  }}